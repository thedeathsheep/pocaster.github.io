---
description: 
globs: 
alwaysApply: true
---
<<<<<<< HEAD

### 1. 项目概述
这是一个基于 Jekyll 的个人博客网站，使用 Beautiful Jekyll 主题构建，托管在 GitHub Pages 上。

### 2. 技术特点
- **静态网站生成器**：使用 Jekyll 作为静态网站生成器
- **主题框架**：基于 Beautiful Jekyll 主题
- **托管平台**：使用 GitHub Pages 进行托管
- **开发环境**：使用 Ruby 和 Bundler 进行本地开发

### 3. 功能特性
- **响应式设计**：支持各种设备访问
- **文章管理**：
  - 支持文章分类和标签系统
  - 内置文章搜索功能
  - RSS 订阅支持
- **社交功能**：
  - 社交媒体集成
  - 评论系统支持（可配置多种评论系统）
- **个性化定制**：
  - 可自定义网站颜色主题
  - 支持自定义导航栏和页脚
  - 支持自定义头像和网站图标

### 4. 项目结构
- `_posts/`：存放博客文章
- `_layouts/`：页面布局模板
- `_includes/`：可重用的页面组件
- `assets/`：静态资源（图片、CSS、JS等）
- `_config.yml`：网站配置文件
- `_data/`：数据文件目录
- `_plugins/`：Jekyll 插件目录

### 5. 特色功能
- 支持多种评论系统（Disqus、Facebook Comments、Staticman等）
- 支持多种分析工具（Google Analytics、Matomo等）
- 支持自定义 CSS 和 JavaScript
- 支持 Mermaid 图表渲染
- 支持多语言（通过配置文件可设置）

### 6. 开发与部署
- 本地开发环境搭建简单
- 使用 Bundler 管理依赖
- 支持实时预览（`bundle exec jekyll serve`）
- 自动部署到 GitHub Pages

### 7. 维护与更新
- 使用 Git 进行版本控制
- 提供完整的文档说明
- 遵循 MIT 开源协议
- 定期更新和维护

你需要注意的是：

### 1. 文件命名规则
- 文件名格式：`YYYY-MM-DD-标题.md`
- 使用英文或中文命名
- 文件扩展名为 `.md`（Markdown格式）

### 2. 文章头部信息（Front Matter）
```yaml
---
layout: post            # 布局类型
title: 文章标题         # 文章标题
cover-img: /path/to/img # 封面图片路径
thumbnail-img: /path    # 缩略图路径
share-img: /path       # 分享图片路径
tags: [标签1, 标签2]    # 文章标签
author: 作者名          # 作者
mathjax: true/false    # 是否启用数学公式
mermaid: true/false    # 是否启用Mermaid图表
---
```

### 3. 内容格式规范
1. **Markdown语法**
   - 支持标准Markdown语法
   - 支持标题、列表、链接、图片等基本格式

2. **特殊功能支持**
   - 数学公式支持（通过 `mathjax: true`）
   - Mermaid图表支持（通过 `mermaid: true`）
   - 代码块支持（使用 \`\`\` 包裹）

3. **图表绘制**
   - Mermaid图表必须包裹在 `<div class="mermaid">` 标签中

### 4. 文章组织结构
1. **基本结构**
   - Front Matter（头部信息）
   - 正文内容
   - （可选）参考资料或脚注

2. **内容组织**
   - 可以使用多级标题（#、##、###等）
   - 支持图文混排
   - 支持代码示例

### 5. 文件存放位置
- 所有文章都存放在 `_posts` 目录下
- 按照年份-月份-日期组织文件名

### 6. 多语言支持
- 支持中英文混排
- 支持其他语言字符

### 7. 特殊注意事项
1. 文件名中的日期必须是有效的日期格式
2. Front Matter 必须使用三个连字符（---）包裹
3. Front Matter 中的所有字段都是可选的，但建议至少包含 `layout` 和 `title`
4. 如果需要使用特殊功能（如数学公式或Mermaid图表），需要在Front Matter中明确声明

这种格式设计使得文章既能保持良好的组织结构，又能支持丰富的展示效果，同时也便于Jekyll静态网站生成器进行处理和渲染。
=======
# 文章格式规范

## 1. 文章头部（Front Matter）
```yaml
---
layout: post
title: "文章标题"
date: YYYY-MM-DD HH:MM:SS +0800
categories: [分类1, 分类2]
tags: [标签1, 标签2, 标签3]
excerpt: "文章摘要，建议在100-200字之间"
math: true  # 如果文章包含数学公式
mermaid: true  # 如果文章包含流程图
---
```

## 2. 正文格式

### 2.1 标题层级
- 一级标题：`# 标题`
- 二级标题：`## 标题`
- 三级标题：`### 标题`
- 四级标题：`#### 标题`
- 五级标题：`##### 标题`

### 2.2 段落格式
- 段落之间空一行
- 段落首行不缩进
- 每行建议不超过80个字符

### 2.3 文本样式
- 加粗：`**文本**`
- 斜体：`*文本*`
- 删除线：`~~文本~~`
- 行内代码：`` `代码` ``
- 高亮：`==文本==`
- 居中：`<center>文本</center>`

### 2.4 列表格式
1. 有序列表：
   ```markdown
   1. 第一项
   2. 第二项
      - 子项1
      - 子项2
   ```

2. 无序列表：
   ```markdown
   - 项目1
   - 项目2
     * 子项目1
     * 子项目2
   ```

### 2.5 代码块
```markdown
```语言
代码内容
```
```

支持的代码语言：
- python
- javascript
- html
- css
- bash
- json
- yaml
- sql

### 2.6 表格格式

```markdown
| 表头1 | 表头2 | 表头3 |
|:-----|:-----:|-----:|
| 左对齐 | 居中对齐 | 右对齐 |
| 内容1 | 内容2 | 内容3 |
```

### 2.7 图片格式
```markdown
![图片描述](mdc:图片路径)
```
- 图片建议放在 `assets/images` 目录下
- 图片命名格式：`YYYY-MM-DD-图片名称.扩展名`
- 建议使用 WebP 或 JPG 格式
- 图片宽度建议不超过 1200px

### 2.8 链接格式
```markdown
[链接文本](mdc:链接地址)
```

### 2.9 引用格式
```markdown
> 引用内容
> 
> 多行引用
```

### 2.10 数学公式
- 行内公式：`$公式$`
- 块级公式：`$$公式$$`

### 2.11 流程图

<div class="mermaid">
graph TD
    A[开始] --> B{判断}
    B -->|是| C[执行]
    B -->|否| D[结束]
</div>


## 3. 文章结构建议

### 3.1 技术文章结构
1. 问题描述
2. 解决方案
3. 实现过程
4. 结果分析
5. 总结与展望

### 3.2 生活随笔结构
1. 背景介绍
2. 事件描述
3. 个人感悟
4. 总结

### 3.3 项目分享结构
1. 项目背景
2. 技术选型
3. 实现过程
4. 遇到的问题
5. 解决方案
6. 项目成果
7. 经验总结

## 4. 注意事项
1. 使用中文标点符号
2. 英文单词前后加空格
3. 代码块要有适当的注释
4. 图片要添加合适的描述
5. 链接要确保有效性
6. 数学公式要正确渲染
7. 流程图要清晰易懂 
>>>>>>> origin/main
