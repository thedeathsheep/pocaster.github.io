---
description: 
globs: 
alwaysApply: true
---
# 博客整体概况
1. 技术博客定位：
- 主要关注游戏开发、AI技术、编程技术等领域
- 文章内容专业性强，包含大量技术分析和实现细节
- 同时包含一些文学创作和思考类文章

2. 文章结构特点：
- 使用Markdown格式编写
- 文件名格式：YYYY-MM-DD-标题.md
- 文章通常包含详细的技术分析、代码示例和图表
- 部分文章包含数学公式和技术图表

3. 内容分类：
- 游戏开发技术（如物理引擎、碰撞检测、游戏系统设计等）
- AI技术（如AI Agent、机器学习应用等）
- 编程技术（如C++、Unity、游戏框架等）
- 游戏设计（如关卡设计、战斗系统、叙事设计等）
- 文学创作（如小说、散文等）

4. 写作风格：
- 技术文章：专业、严谨、注重实践
- 文学创作：富有想象力和个人风格
- 分析类文章：深入浅出，注重逻辑性


# 文学创作风格
通过分析您的文章，特别是《折梅人》这篇作品，我可以总结出以下写作风格特点：

1. 叙事结构特点：
- 采用多视角叙事，通过不同人物的视角片段式地展开故事
- 善用"楔子+正文"的结构，先铺垫氛围，再展开故事
- 场景转换自然，通过不同人物的视角和对话推进情节

2. 语言风格：
- 文字简洁而富有诗意，如"尸体像是一种比较大块的雪，落在地上"
- 善用意象和象征，如"梅花"、"雪"等意象的反复出现
- 对话简短有力，往往包含深层含义
- 细节描写精准，如"马背上的人两只脚被马镫锁住，无头的身体悬挂在一侧"

3. 氛围营造：
- 善于营造冷峻、压抑的氛围
- 通过自然环境的描写（如雪、风）烘托人物心理
- 在平静中暗藏杀机，在细节中展现冲突

4. 主题表达：
- 关注人性、生死、命运等深刻主题
- 通过具体事件折射时代背景
- 在故事中融入哲学思考

5. 写作技巧：
- 善用对比手法，如"洁白的，纯粹的，冰冷的雪"与"满地鲜血"的对比
- 通过细节暗示更大的背景，如"从南方烟雨中的宫殿寄来"暗示时代背景
- 运用象征手法，如"梅花"的象征意义

6. 情感表达：
- 情感表达克制，不直接抒发
- 通过细节和动作展现人物心理
- 在平静的叙述中暗含强烈的情感

7. 结构特点：
- 段落简短，节奏紧凑
- 场景转换自然，时空交错
- 通过不同人物的视角构建完整故事

8. 文学特色：
- 融合传统文学元素（如《诗经》引用）
- 现代叙事手法与传统意象的结合
- 在现实与超现实之间游走

# 文章格式规范

## 1. 文章头部（Front Matter）
```yaml
---
layout: post
title: "文章标题"
date: YYYY-MM-DD HH:MM:SS +0800
categories: [分类1, 分类2]
tags: [标签1, 标签2, 标签3]
excerpt: "文章摘要，建议在100-200字之间"
math: true  # 如果文章包含数学公式
mermaid: true  # 如果文章包含流程图
---
```

## 2. 正文格式

### 2.1 标题层级
- 一级标题：`# 标题`
- 二级标题：`## 标题`
- 三级标题：`### 标题`
- 四级标题：`#### 标题`
- 五级标题：`##### 标题`

### 2.2 段落格式
- 段落之间空一行
- 段落首行不缩进
- 每行建议不超过80个字符

### 2.3 文本样式
- 加粗：`**文本**`
- 斜体：`*文本*`
- 删除线：`~~文本~~`
- 行内代码：`` `代码` ``
- 高亮：`==文本==`
- 居中：`<center>文本</center>`

### 2.4 列表格式
1. 有序列表：
   ```markdown
   1. 第一项
   2. 第二项
      - 子项1
      - 子项2
   ```

2. 无序列表：
   ```markdown
   - 项目1
   - 项目2
     * 子项目1
     * 子项目2
   ```

### 2.5 代码块
```markdown
```语言
代码内容
```
```

支持的代码语言：
- python
- javascript
- html
- css
- bash
- json
- yaml
- sql

### 2.6 表格格式

```markdown
| 表头1 | 表头2 | 表头3 |
|:-----|:-----:|-----:|
| 左对齐 | 居中对齐 | 右对齐 |
| 内容1 | 内容2 | 内容3 |
```

### 2.7 图片格式
```markdown
![图片描述](mdc:图片路径)
```
- 图片建议放在 `assets/images` 目录下
- 图片命名格式：`YYYY-MM-DD-图片名称.扩展名`
- 建议使用 WebP 或 JPG 格式
- 图片宽度建议不超过 1200px

### 2.8 链接格式
```markdown
[链接文本](mdc:链接地址)
```

### 2.9 引用格式
```markdown
> 引用内容
> 
> 多行引用
```

### 2.10 数学公式
- 行内公式：`$公式$`
- 块级公式：`$$公式$$`

### 2.11 流程图

所有的mermaid必须被<div>包围。
<div class="mermaid">
graph TD
    A[开始] --> B{判断}
    B -->|是| C[执行]
    B -->|否| D[结束]
</div>


## 3. 文章结构建议

### 3.1 技术文章结构
1. 问题描述
2. 解决方案
3. 实现过程
4. 结果分析
5. 总结与展望

### 3.2 生活随笔结构
1. 背景介绍
2. 事件描述
3. 个人感悟
4. 总结

### 3.3 项目分享结构
1. 项目背景
2. 技术选型
3. 实现过程
4. 遇到的问题
5. 解决方案
6. 项目成果
7. 经验总结

## 4. 注意事项
1. 使用中文标点符号
2. 英文单词前后加空格
3. 代码块要有适当的注释
4. 图片要添加合适的描述
5. 链接要确保有效性
6. 数学公式要正确渲染
7. 流程图要清晰易懂 