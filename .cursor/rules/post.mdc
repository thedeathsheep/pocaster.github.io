---
description: 
globs: 
alwaysApply: true
---
# 博客整体概况
1. 技术博客定位：
- 主要关注游戏开发、AI技术、编程技术等领域
- 文章内容专业性强，包含大量技术分析和实现细节
- 同时包含一些文学创作和思考类文章

2. 文章结构特点：
- 使用Markdown格式编写
- 文件名格式：YYYY-MM-DD-标题.md
- 文章通常包含详细的技术分析、代码示例和图表
- 部分文章包含数学公式和技术图表

3. 内容分类：
- 游戏开发技术（如物理引擎、碰撞检测、游戏系统设计等）
- AI技术（如AI Agent、机器学习应用等）
- 编程技术（如C++、Unity、游戏框架等）
- 游戏设计（如关卡设计、战斗系统、叙事设计等）
- 文学创作（如小说、散文等）

4. 写作风格：
- 技术文章：专业、严谨、注重实践
- 文学创作：富有想象力和个人风格
- 分析类文章：深入浅出，注重逻辑性

# 项目概述
这是一个基于 Jekyll 的个人博客网站，使用 Beautiful Jekyll 主题构建，托管在 GitHub Pages 上。

## 技术特点
- **静态网站生成器**：使用 Jekyll 作为静态网站生成器
- **主题框架**：基于 Beautiful Jekyll 主题
- **托管平台**：使用 GitHub Pages 进行托管
- **开发环境**：使用 Ruby 和 Bundler 进行本地开发

## 功能特性
- **响应式设计**：支持各种设备访问
- **文章管理**：
  - 支持文章分类和标签系统
  - 内置文章搜索功能
  - RSS 订阅支持
- **社交功能**：
  - 社交媒体集成
  - 评论系统支持（可配置多种评论系统）
- **个性化定制**：
  - 可自定义网站颜色主题
  - 支持自定义导航栏和页脚
  - 支持自定义头像和网站图标

## 项目结构
- `_posts/`：存放博客文章
- `_layouts/`：页面布局模板
- `_includes/`：可重用的页面组件
- `assets/`：静态资源（图片、CSS、JS等）
- `_config.yml`：网站配置文件
- `_data/`：数据文件目录
- `_plugins/`：Jekyll 插件目录

## 特色功能
- 支持多种评论系统（Disqus、Facebook Comments、Staticman等）
- 支持多种分析工具（Google Analytics、Matomo等）
- 支持自定义 CSS 和 JavaScript
- 支持 Mermaid 图表渲染
- 支持多语言（通过配置文件可设置）

## 开发与部署
- 本地开发环境搭建简单
- 使用 Bundler 管理依赖
- 支持实时预览（`bundle exec jekyll serve`）
- 自动部署到 GitHub Pages

## 维护与更新
- 使用 Git 进行版本控制
- 提供完整的文档说明
- 遵循 MIT 开源协议
- 定期更新和维护

# 文章格式规范

## 1. 文章头部（Front Matter）
```yaml
---
layout: post
title: "文章标题"
date: YYYY-MM-DD HH:MM:SS +0800
categories: [分类1, 分类2]
tags: [标签1, 标签2, 标签3]
excerpt: "文章摘要，建议在100-200字之间"
math: true  # 如果文章包含数学公式
mermaid: true  # 如果文章包含流程图
---
```

## 2. 正文格式

### 2.1 标题层级
- 一级标题：`# 标题`
- 二级标题：`## 标题`
- 三级标题：`### 标题`
- 四级标题：`#### 标题`
- 五级标题：`##### 标题`

### 2.2 段落格式
- 段落之间空一行
- 段落首行不缩进
- 每行建议不超过80个字符

### 2.3 文本样式
- 加粗：`**文本**`
- 斜体：`*文本*`
- 删除线：`~~文本~~`
- 行内代码：`` `代码` ``
- 高亮：`==文本==`
- 居中：`<center>文本</center>`

### 2.4 列表格式
1. 有序列表：
   ```markdown
   1. 第一项
   2. 第二项
      - 子项1
      - 子项2
   ```

2. 无序列表：
   ```markdown
   - 项目1
   - 项目2
     * 子项目1
     * 子项目2
   ```

### 2.5 代码块
所有代码必须遵守Google C++ Style Guide，且左括号必须换行，allman style
```markdown
```语言
代码内容
```
```

## 3. 特殊注意事项
1. 文件名中的日期必须是有效的日期格式
2. Front Matter 必须使用三个连字符（---）包裹
3. Front Matter 中的所有字段都是可选的，但建议至少包含 `layout` 和 `title`
4. 如果需要使用特殊功能（如数学公式或Mermaid图表），需要在Front Matter中明确声明

# 文学创作风格

1. 叙事结构特点：
- 采用多视角叙事，通过不同人物的视角片段式地展开故事
- 善用"楔子+正文"的结构，先铺垫氛围，再展开故事
- 场景转换自然，通过不同人物的视角和对话推进情节

2. 语言风格：
- 文字简洁而富有诗意，如"尸体像是一种比较大块的雪，落在地上"
- 善用意象和象征，如"梅花"、"雪"等意象的反复出现
- 对话简短有力，往往包含深层含义
- 细节描写精准，如"马背上的人两只脚被马镫锁住，无头的身体悬挂在一侧"

3. 氛围营造：
- 善于营造冷峻、压抑的氛围
- 通过自然环境的描写（如雪、风）烘托人物心理
- 在平静中暗藏杀机，在细节中展现冲突

4. 主题表达：
- 关注人性、生死、命运等深刻主题
- 通过具体事件折射时代背景
- 在故事中融入哲学思考

5. 写作技巧：
- 善用对比手法，如"洁白的，纯粹的，冰冷的雪"与"满地鲜血"的对比
- 通过细节暗示更大的背景，如"从南方烟雨中的宫殿寄来"暗示时代背景
- 运用象征手法，如"梅花"的象征意义

6. 情感表达：
- 情感表达克制，不直接抒发
- 通过细节和动作展现人物心理
- 在平静的叙述中暗含强烈的情感

7. 结构特点：
- 段落简短，节奏紧凑
- 场景转换自然，时空交错
- 通过不同人物的视角构建完整故事

8. 文学特色：
- 融合传统文学元素（如《诗经》引用）
- 现代叙事手法与传统意象的结合
- 在现实与超现实之间游走
